ESPACIO RESERVADO Y FLUJO(DISTRIBUCIÓN):
Todos los elementos tienen su propio espacio reservado, que
para ser ocupado por otro elemento se debe utilizar position
y además, tienen un flujo de distribución, es decir, 
aparecen en la pantalla de acuerdo al llamado desde el 
codigo HTML.

POSICIÓN:
Es un tipo de display y me sirve para ubicar los elementos
de la pantalla en cualquier lugar que yo necesite y podemos
manipular el orden de los elementos diferente al como se
presentan en la pantalla especificado desde el codigo HTML.

PROPIEDAD Offset:
Son las propiedades que mueven a un elemento posicionado. 

POSICIONADO es un elemento que tenga una propiedad de
relative, absolute, fixed o sticky, es decir, de position 
distinta a static. 

Si el elemento tiene un valor de elemento POSICIONADO los
puedo mover por las siguientes propiedades según el borde 
indicado, ademas del z-index:

top: 20px;
left: 200px;
right: 200px;
bottom: 20px;
z-index: 1;
pero este borde es el que rodea al propio elemento POSICIONADO.

NOTA => TOP y LEFT tienen mayor peso que BOTTOM y RIGHT.
------------------------------------------------------------------------------------------------

POSITION:RELATIVE: Me dice desde donde empiezo a mover el
elemento POSICIONADO y tengo como referencia los bordes de los
diferentes lados del elemento.

CARACTERISTICAS DE ESTA PROPIEDAD:
1. Su referencia es su posición inicial.
2. Aplicar esta declaración completa no modifica ningun otro
elemento del layout(GEOMETRIA), ni a el mismo.
3. Al moverlo con las propiedades offset , el elemento 
conserva su espacio, así se desplace.
4. Esta caracteristica es importante cuando deseo mover un
elemento, sin modifcar el layout(GEOMETRIA) de ningun otro 
elemento del web-site.

CUANDO IMPLEMENTARLA:
Es importante para cuando quiero mover un elemento del layot y no
quiero que se modifique el layout de otro elemento, es decir, solo
quiero mover ese elemento en particular y que se conserve el
espacio en el layout(GEOMETRIA).
-----------------------
Es más conveniente indicar un border para ver como se 
mueve el elemento con respecto a su referencia.
top: 20px toma como referencia el borde superior y 
          se mueve hacia abajo.
left: 200px toma como referencia es la izquierda y 
          se mueve hacia la derecha.
right: 200px toma como referencia es la derecha y 
          se mueve hacia la izquierda.
bottom: 20px toma como referencia el border inferior y 
          se mueve hacia arriba.
-----------------------------------------------------------------------------------------------------

POSITION:ABSOLUTE: Es más complejo que el anterior, pero tambien
me dice desde donde empiezo a mover el elemento POSICIONADO y 
tengo como referencia los bordes de los diferentes lados del mismo 
elemento con respecto a los borde de referencia de su ancestro o 
elemento padre, si no tiene ninguno elemento PADRE POSICIONADO,
toma como elemento POSICIONADO y PADRE de referencia el VIEWPORT.

CARACTERISTICAS DE ESTA PROPIEDAD:
1. Pierde su posición en el flujo y no mantinene su espacio, pasa atras.
2. Si tiene dimensiones fijas las mantiene, pero si tienen
dimensiones Automaticas, se vuelve estilo inline, es decir,
el ancho y alto es de acuerdo a su contenido.
3. La referencia que tiene esta declaración es su ANCESTRO
POSICIONADO mas cercano y si no tiene un ANCESTRO posicionado
se va regir por el body o viewport.
4. El elemento posicionado puede tener cualquier propiedad 
desde que no sea estatica y no necesariamente tiene que ser
RELATIVE.
.box{
  position: relative;
  width: 300px;
  height: 300px;
  background: red;
}
span{
  position: absolute;
/*   display: block; */
  right: 0;
  bottom: 0;
  width: 99%;
  height: 45px;
  border: 1px solid #000;
  text-align: center;
  line-height: 45px;
}

NOTA IMPORTANTE RELATIVE Y ABSOLUTE:
Los dos se mueven igual lo que cambia es que uno conserva su
espacio y el otro no y el otro se recomienda que tenga una referencia
de un elemento POSICIONADO como referencia que generalmente
es relative, pero obligatoriamente no debe ser relative.Ademas a 
absolute hay que darle un ancho por que sino toma el ancho de tipo 
inline.
------------------------------------------------------------------------------------------------------

(POSITION:FIXED, funciona para todos los elementos del 
web-site)
1. Es relativo al VIEWPORT, es decir, su referencia es el
VIEWPORT.
2. es ignorado en el flujo de los elementos.
3. las dimensiones Automaticas se restringen a su contenido.

position: static | relative | absolute | fixed | sticky
Lo complejo de position es que se va a comportar diferente,
de acuerdo a la propiedad de las mencionadas anteriormente 
que tenga asignada.

STATIC: Todos los elementos son static de forma 
predeterminada.
--------------------------------------------------------------

POSITION STICKY:

El valor sticky es una combinación entre relative y fixed.
El elemento conserva su espacio en el flujo.
Si no tiene dimensiones declaradas, sus dimensiones se ajustan al contenido.
Su punto de referencia no se modificará aunque movamos el elemento.
Cuando Hacemos scroll el elemento se moverá hasta alcanzar el tope establecido.

EJEMPLO =>
Para separar un elemento despues de darle scroll y alcance
una medida determinada, esa medida se define con top, left,
bottom, right, depende mucho de donde se este ejecutando
el scroll.
--------------------------------------------------------------

Z-index:
Me permite ubicar la capa de un elemento sobre la otra capa
de otro elemento, el elemento con un mayor z-index va prevalecer
por encima de otro z-index, en el codigo se representa de la
siguiente forma:
z-index: 1;

Si el elemento PADRE tiene un z-index declarado no podremos poner
a un hijo por encima.

Para que funcione un z-index con un padre con z-index,
debe comentarse el z-index del padre y el valor del z-index
del hijo debe ser negativo.

Es recomendable no utilizar valores consecutivos, pero si valores
que den el espacio para agregar nuevos z-index imprevistos, como
por EJEMPLO: 10, 20, 30... ó 100, 200, 300...
--------------------------------------------------------------