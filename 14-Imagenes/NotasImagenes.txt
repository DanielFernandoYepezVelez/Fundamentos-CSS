No Existen propiedades para imágenes en CSS.

1. Imagenes Responsives => En el archivo base se recomienda poner esta regla
    img {
        max-width: 100%;
    }

2. La imagenes por defecto son elementos con un display inline, esto causa un espacio
por debajo debido a su line-height, se puede solucionar de dos formas.
    2.1. Dando un line-height: 0; al contenedor.
    2.2. Darle un display:block; a la imagen.

3. Centrado Horizontal.
    imagen con display: block; y margenes laterales automaticos.
    tex-align: center; si la imagen no es de bloque.

4. Centrado Vertical.
    Flexbox(La mejor opción).
    vertical-align: middle; para la imagen y el texto.

CON ESTAS PROPIEDADES EVITAMOS QUE UNA IMAGEN SE DEFORME =>

1. object-fit: Se usa para especificar como se debe cambiar el tamaño de <img> o <video> para que se ajuste a su contenedor.
    fill: Valor por defecto.
    contain: El contenido se ajustara hasta rellenar de forma vertical u horizontal el contenedor sin deformarse.
    cover: El contenido se ajustara hasta rellenar de forma vertical y horizontal el contenedor sin deformarse.
    none: El contenido no se redimensiona y mantiene su tamaño original mostrando solo el trozo de las dimensiones especificadas.
    scale-down: selecciona el menor de la comparación entre none y contain.

2. object-position: coloca la imagen cuando esta no se muestra completa en el contenedor(se debe utilizar con object-fit en cover o none). Y por ultimo recibe dos valores, uno para el eje X y otro para el eje Y.
    left top
    left center
    left bottom

    right top
    right center
    right bottom

    center top
    center center
    center bottom

LOS FILTROS DE LAS IMAGENES => Funciona como tipo instagram
filter:
    none.
    blur(px): desenfoca la imagen.
    brightnee(%): Ajusta el brillo de la imagen siendo 1 el original. De 0 a 1 dan oscuridad y de 1 a n dan sobrexposición.
    constrast(%): Ajusta el contraste de la imagen siendo 1 el original. De 0 es negro y de 1 a n dan mas contraste.
    drop-shadow(h-shadow v-shadow blur spread color): Aplica una sombra paralela a la imagen.
    grayscale(%): Convierte la imagen a escala de grises, 0 es el original y 1 seria blanco y negro completamente.
    hue-rotate(deg): Añade matriz de color a la imagen. Se da un valor en grados segun la rueda crómatica. El valor maximo es de 360deg.
    invert(%): Invierte el color de la imagen. Saca un negativo. 0 es el valor por defecto y 1 es totalmente invertida.
    opacity(%): Controla la opacidad de la imagen. 1 es el valor por defecto y 0 es transparente.
    saturate(%): Controla la saturación de color de la imagen. 1 es el valor por defecto, 0 es totalmente desaturada y por encima de 1 se sobresatura.
    sepia(%): Aplica un tono sepia a la imagen. 0 Es el valor por defecto y 1 es totalmente sepia.
    url(): Buscar documentación sobre este filtro.
------------------------------------------------------------

CLIP-PATH => Es una mascara que oculta partes de una caja.
clip-path: at => me sirve para cambiar el centro del elemento.
    circle(): dibuja un circulo, puede tener una medida fija, circle(100px) o podemos especificar
    un centro con at, circle(100px at medidaX | medidaY | palabrasClaveX palabrasClaveY)
    top,
    left,
    center,
    right
    Si solo tiene una propiedad la segunda propiedad es el circulo por defecto.
    
    ellipse(): dibuja una elipse, funciona igual que un circulo, pero en este caso podemos
    especificar dos centros, el horizontal y el vertical.

    inset(): dibuja un borde transparente por dentro de la caja.
    inset(all | Y X | top X bottom | top left bottom right)
    existe la opción de redondear las esquinas, para ellos despues de los valores del inset
    pondremos round:
    inset(*** round all |
    top-left bottom-right top-right bottom-left |
    top-left top-right & bottom-left bottom-right |
    top-left top-right bottom-right bottom-left
    )
    polygon(): Especifica una serie de puntos(minimo 3) para definir la zona visible
    siendo el punto 0 0 la esquina superior izquierda.
    Los puntos se especifican por parejas de ejeX y de ejeY.
    polygon(0 0, 100% 0, 0 100%)

    Generador de clip-path: https://bennettfeely.com/clippy/